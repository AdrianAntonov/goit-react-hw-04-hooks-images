{"version":3,"sources":["components/Searchbar/Searchbar.js","Services.js","components/Button/Button.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","inputValue","setInputValue","className","e","trim","preventDefault","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","fetchingApi","fetching","searchValue","page","axios","get","Button","data","onClick","modalRoot","document","querySelector","Modal","onClose","children","handleCloseModal","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","ImageGalleryItem","id","picture","modalPicture","modal","setModal","toglleModal","handleModal","src","alt","ImageGallery","images","setImages","setPage","scroll","setScroll","error","setError","status","setStatus","Services","then","response","hits","length","prevImages","scrollBy","top","documentElement","clientHeight","behavior","catch","color","height","width","timeout","message","map","item","webformatURL","largeImageURL","prevPage","scrollTo","scrollHeight","App","text","setText","arg","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0bff47fb.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles.css';\n\nfunction Searchbar({ onSubmit }) {\n  // state = {\n  //   inputValue: '',\n  // };\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleOnSubmit = e => {\n    if (inputValue.trim() === '') {\n      alert('Wrong input!');\n      return;\n    }\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  const handleChange = e => {\n    // this.setState({ inputValue: e.target.value });\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleOnSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={inputValue}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import axios from 'axios';\n\nfunction fetching(searchValue, page) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const KEY = '23540624-9aec9adb1c30af208be906523';\n\n  return axios.get(\n    `${BASE_URL}?q=${searchValue}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n\n  // return fetch(\n  //   `${BASE_URL}?q=${searchValue}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  // ).then(response => {\n  //   if (response.ok) {\n  //     return response.json();\n  //   }\n  //   // return Promise.reject(new Error('Что-то пошло не так'));\n  // });\n}\n\nconst fetchingApi = {\n  fetching,\n};\n\nexport default fetchingApi;\n","import PropTypes from 'prop-types';\n\nfunction Button({ data }) {\n  return (\n    <button className=\"Button\" onClick={data}>\n      Load More\n    </button>\n  );\n}\n\nButton.propTypes = {\n  data: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\nfunction Modal({ onClose, children }) {\n  const handleCloseModal = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClose = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleCloseModal);\n    return () => {\n      window.removeEventListener('keydown', handleCloseModal);\n    };\n  });\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleOverlayClose}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\n\nfunction ImageGalleryItem({ id, picture, modalPicture }) {\n  const [modal, setModal] = useState(false);\n\n  const toglleModal = () => {\n    setModal(!modal);\n  };\n\n  const handleModal = e => {\n    if (id === +e.target.id) {\n      toglleModal();\n    }\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\" key={id}>\n      {modal && (\n        <Modal onClose={toglleModal}>\n          <img\n            onClick={handleModal}\n            id={id}\n            src={modalPicture}\n            alt={id}\n            className=\"ImageGalleryItem-image\"\n          />\n        </Modal>\n      )}\n      <img\n        onClick={handleModal}\n        id={id}\n        src={picture}\n        alt={id}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  picture: PropTypes.node.isRequired,\n  modalPicture: PropTypes.node.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { useState, useEffect } from 'react';\n// import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport Services from '../../Services';\nimport Loader from 'react-loader-spinner';\nimport Button from '../Button';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nfunction ImageGallery({ searchValue }) {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [scroll, setScroll] = useState(false);\n  const [error, setError] = useState('');\n  const [status, setStatus] = useState('idle');\n\n  const handleScroll = () => {\n    setScroll(true);\n    setPage(prevPage => prevPage + 1);\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n\n    setScroll(false);\n    Services.fetching(searchValue, page)\n      .then(response => {\n        if (response.data.hits.length === 0) {\n          // toast('Not valid input! Try again!');\n          alert('Not valid input! Try again!');\n        }\n        setStatus('pending');\n\n        setImages(prevImages => [...prevImages, ...response.data.hits]);\n\n        setStatus('resolved');\n\n        scroll &&\n          window.scrollBy({\n            top: document.documentElement.clientHeight - 160,\n            behavior: 'smooth',\n          });\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [page, scroll, searchValue]);\n\n  if (status === 'idle') {\n    return null;\n  }\n  if (status === 'pending') {\n    return (\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n        className=\"Loader\"\n      />\n    );\n  }\n\n  if (status === 'rejected') {\n    return <h2>{error.message}</h2>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <div>\n        <ul className=\"ImageGallery\">\n          {/* <!-- Набор <li> с изображениями --> */}\n          {images.map(item => (\n            <ImageGalleryItem\n              key={item.id}\n              id={item.id}\n              picture={item.webformatURL}\n              modalPicture={item.largeImageURL}\n            />\n          ))}\n        </ul>\n\n        {images.length > 0 && (\n          <div className=\"DivButton\">\n            <Button data={handleScroll} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n};\n\nexport default ImageGallery;\n","// import { ToastContainer } from 'react-toastify';\nimport { useState } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nfunction App() {\n  const [text, setText] = useState('');\n\n  const handleSearchbarInput = arg => {\n    setText(arg);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleSearchbarInput} />\n      <ImageGallery searchValue={text} />\n      {/* <ToastContainer position=\"top-center\" autoClose={3000} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}