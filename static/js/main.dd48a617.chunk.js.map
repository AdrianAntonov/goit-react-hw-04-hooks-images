{"version":3,"sources":["components/Searchbar/Searchbar.js","Services.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","inputValue","setInputValue","className","e","trim","preventDefault","toast","type","value","autoComplete","autoFocus","placeholder","onChange","target","fetchingApi","fetching","searchValue","page","axios","get","LoaderComponent","color","height","width","timeout","Button","data","onClick","modalRoot","document","querySelector","Modal","onClose","children","handleCloseModal","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","ImageGalleryItem","id","picture","modalPicture","modal","setModal","toglleModal","handleModal","src","alt","ImageGallery","images","setImages","setPage","error","setError","status","setStatus","Services","then","response","hits","length","prevImages","scrollTo","top","documentElement","scrollHeight","behavior","catch","Loader","message","map","item","webformatURL","largeImageURL","prevPage","App","text","setText","arg","position","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"wPA+CeA,MAzCf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAhBV,SAAAK,GACK,KAAtBH,EAAWI,QAIfD,EAAEE,iBACFP,EAASE,GACTC,EAAc,KALZK,YAAM,gCAcN,UACE,wBAAQC,KAAK,SAASL,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAEF,uBACEA,UAAU,mBACVK,KAAK,OACLC,MAAOR,EACPS,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAjBa,SAAAT,GACnBF,EAAcE,EAAEU,OAAOL,gB,wBCA3B,IAIeM,EAJK,CAClBC,SAnBF,SAAkBC,EAAaC,GAI7B,OAAOC,IAAMC,IAAN,UAHU,2BAGV,cACYH,EADZ,iBACgCC,EADhC,gBAFK,qCAEL,2D,iBCWMG,MAff,WACE,OACE,gCACE,cAAC,IAAD,CACEb,KAAK,YACLc,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,IACTtB,UAAU,WACT,QCEMuB,MAZf,YAA2B,IAATC,EAAQ,EAARA,KAChB,OACE,wBAAQxB,UAAU,SAASyB,QAASD,EAApC,wBCAEE,EAAYC,SAASC,cAAc,eAkC1BC,MAjCf,YAAuC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAClBC,EAAmB,SAAA/B,GACR,WAAXA,EAAEgC,MACJH,KAiBJ,OAPAI,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWJ,GAC5B,WACLG,OAAOE,oBAAoB,UAAWL,OAInCM,uBACL,qBAAKtC,UAAU,UAAUyB,QAdA,SAAAxB,GACrBA,EAAEsC,gBAAkBtC,EAAEU,QACxBmB,KAYF,SACE,qBAAK9B,UAAU,QAAf,SAAwB+B,MAE1BL,ICkBWc,MA3Cf,YAA0D,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aACvC,EAA0B9C,oBAAS,GAAnC,mBAAO+C,EAAP,KAAcC,EAAd,KAEMC,EAAc,WAClBD,GAAUD,IAGNG,EAAc,SAAA9C,GACdwC,KAAQxC,EAAEU,OAAO8B,IACnBK,KAIJ,OACE,qBAAI9C,UAAU,mBAAd,UACG4C,GACC,cAAC,EAAD,CAAOd,QAASgB,EAAhB,SACE,qBACErB,QAASsB,EACTN,GAAIA,EACJO,IAAKL,EACLM,IAAKR,EACLzC,UAAU,6BAIhB,qBACEyB,QAASsB,EACTN,GAAIA,EACJO,IAAKN,EACLO,IAAKR,EACLzC,UAAU,6BAjBwByC,IC4E3BS,MArFf,YAAwC,IAAhBpC,EAAe,EAAfA,YACtB,EAA4BjB,mBAAS,IAArC,mBAAOsD,EAAP,KAAeC,EAAf,KACA,EAAwBvD,mBAAS,GAAjC,mBAAOkB,EAAP,KAAasC,EAAb,KACA,EAA0BxD,mBAAS,IAAnC,mBAAOyD,EAAP,KAAcC,EAAd,KACA,EAA4B1D,mBAAS,QAArC,mBAAO2D,EAAP,KAAeC,EAAf,KAyCA,OAvCAvB,qBAAU,WACRmB,EAAQ,GACRD,EAAU,MACT,CAACtC,IAEJoB,qBAAU,WACY,KAAhBpB,IAGS,IAATC,GACF0C,EAAU,WAGZC,EAAS7C,SAASC,EAAaC,GAC5B4C,MAAK,SAAAC,GAC8B,IAA9BA,EAASpC,KAAKqC,KAAKC,QACrB1D,YAAM,+BAGNgD,EADW,IAATrC,EACQ,YAAI6C,EAASpC,KAAKqC,MAElB,SAAAE,GAAU,4BAAQA,GAAR,YAAuBH,EAASpC,KAAKqC,SAG3DJ,EAAU,YAEN1C,EAAO,GACToB,OAAO6B,SAAS,CACdC,IAAKtC,SAASuC,gBAAgBC,aAC9BC,SAAU,cAIfC,OAAM,SAAAf,GACLC,EAASD,GACTG,EAAU,kBAEb,CAAC1C,EAAMD,IAEK,SAAX0C,EACK,KAEM,YAAXA,EACK,cAACc,EAAD,IAGM,aAAXd,EACK,6BAAKF,EAAMiB,UAGL,aAAXf,EAEA,gCACE,oBAAIxD,UAAU,eAAd,SAEGmD,EAAOqB,KAAI,SAAAC,GAAI,OACd,cAAC,EAAD,CAEEhC,GAAIgC,EAAKhC,GACTC,QAAS+B,EAAKC,aACd/B,aAAc8B,EAAKE,eAHdF,EAAKhC,SAQfU,EAAOW,OAAS,GACf,qBAAK9D,UAAU,YAAf,SACE,cAAC,EAAD,CAAQwB,KAAM,kBAAM6B,GAAQ,SAAAuB,GAAQ,OAAIA,EAAW,kBAjB7D,GC5CaC,MAhBf,WACE,MAAwBhF,mBAAS,IAAjC,mBAAOiF,EAAP,KAAaC,EAAb,KAMA,OACE,sBAAK/E,UAAU,MAAf,UACE,cAAC,EAAD,CAAWJ,SANc,SAAAoF,GAC3BD,EAAQC,MAMN,cAAC,EAAD,CAAclE,YAAagE,IAC3B,cAAC,IAAD,CAAgBG,SAAS,aAAaC,UAAW,UCZvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1D,SAAS2D,eAAe,W","file":"static/js/main.dd48a617.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport '../styles.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleOnSubmit = e => {\n    if (inputValue.trim() === '') {\n      toast('Not valid input! Try again!');\n      return;\n    }\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleOnSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={inputValue}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import axios from 'axios';\n\nfunction fetching(searchValue, page) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const KEY = '23540624-9aec9adb1c30af208be906523';\n\n  return axios.get(\n    `${BASE_URL}?q=${searchValue}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n\n  // return fetch(\n  //   `${BASE_URL}?q=${searchValue}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  // ).then(response => {\n  //   if (response.ok) {\n  //     return response.json();\n  //   }\n  //   // return Promise.reject(new Error('Что-то пошло не так'));\n  // });\n}\n\nconst fetchingApi = {\n  fetching,\n};\n\nexport default fetchingApi;\n","import Loader from 'react-loader-spinner';\n\nfunction LoaderComponent() {\n  return (\n    <div>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n        className=\"Loader\"\n      />{' '}\n    </div>\n  );\n}\n\nexport default LoaderComponent;\n","import PropTypes from 'prop-types';\n\nfunction Button({ data }) {\n  return (\n    <button className=\"Button\" onClick={data}>\n      Load More\n    </button>\n  );\n}\n\nButton.propTypes = {\n  data: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\nfunction Modal({ onClose, children }) {\n  const handleCloseModal = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClose = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleCloseModal);\n    return () => {\n      window.removeEventListener('keydown', handleCloseModal);\n    };\n  });\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleOverlayClose}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\n\nfunction ImageGalleryItem({ id, picture, modalPicture }) {\n  const [modal, setModal] = useState(false);\n\n  const toglleModal = () => {\n    setModal(!modal);\n  };\n\n  const handleModal = e => {\n    if (id === +e.target.id) {\n      toglleModal();\n    }\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\" key={id}>\n      {modal && (\n        <Modal onClose={toglleModal}>\n          <img\n            onClick={handleModal}\n            id={id}\n            src={modalPicture}\n            alt={id}\n            className=\"ImageGalleryItem-image\"\n          />\n        </Modal>\n      )}\n      <img\n        onClick={handleModal}\n        id={id}\n        src={picture}\n        alt={id}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  picture: PropTypes.node.isRequired,\n  modalPicture: PropTypes.node.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport Services from '../../Services';\nimport LoaderComponent from '../Loader/Loader';\nimport Button from '../Button';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nfunction ImageGallery({ searchValue }) {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState('');\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setPage(1);\n    setImages([]);\n  }, [searchValue]);\n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n    if (page === 1) {\n      setStatus('pending');\n    }\n\n    Services.fetching(searchValue, page)\n      .then(response => {\n        if (response.data.hits.length === 0) {\n          toast('Not valid input! Try again!');\n        }\n        if (page === 1) {\n          setImages([...response.data.hits]);\n        } else {\n          setImages(prevImages => [...prevImages, ...response.data.hits]);\n        }\n\n        setStatus('resolved');\n\n        if (page > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [page, searchValue]);\n\n  if (status === 'idle') {\n    return null;\n  }\n  if (status === 'pending') {\n    return <LoaderComponent />;\n  }\n\n  if (status === 'rejected') {\n    return <h2>{error.message}</h2>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <div>\n        <ul className=\"ImageGallery\">\n          {/* <!-- Набор <li> с изображениями --> */}\n          {images.map(item => (\n            <ImageGalleryItem\n              key={item.id}\n              id={item.id}\n              picture={item.webformatURL}\n              modalPicture={item.largeImageURL}\n            />\n          ))}\n        </ul>\n\n        {images.length > 0 && (\n          <div className=\"DivButton\">\n            <Button data={() => setPage(prevPage => prevPage + 1)} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n};\n\nexport default ImageGallery;\n","import { ToastContainer } from 'react-toastify';\nimport { useState } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nfunction App() {\n  const [text, setText] = useState('');\n\n  const handleSearchbarInput = arg => {\n    setText(arg);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleSearchbarInput} />\n      <ImageGallery searchValue={text} />\n      <ToastContainer position=\"top-center\" autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}